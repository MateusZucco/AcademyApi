CREATE DATABASE IF NOT EXISTS academy_schema;

USE academy_schema;

CREATE TABLE IF NOT EXISTS matters(
  matter_id INT UNIQUE AUTO_INCREMENT PRIMARY KEY,
  name VARCHAR(255) UNIQUE NOT NULL,
  credits FLOAT NOT NULL,
  description TEXT,
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP);

CREATE TABLE IF NOT EXISTS userTypes(
  user_type_id INT UNIQUE AUTO_INCREMENT PRIMARY KEY,
  title VARCHAR(55) UNIQUE NOT NULL,
  description VARCHAR(255) NOT NULL,
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP);

CREATE TABLE IF NOT EXISTS users (
  user_id INT UNIQUE AUTO_INCREMENT PRIMARY KEY,
  first_name VARCHAR(255) NOT NULL,
  last_name VARCHAR(255) NOT NULL,
  email VARCHAR(255) UNIQUE NOT NULL,
  password VARCHAR(200) NOT NULL,
  birth_date DATE,
  registration_number VARCHAR(20) UNIQUE NOT NULL,
  user_type_id INT NOT NULL,
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  FOREIGN KEY (user_type_id) REFERENCES userTypes(user_type_id)
);

CREATE TABLE IF NOT EXISTS grades (
  grade_id INT UNIQUE AUTO_INCREMENT PRIMARY KEY,
  user_id INT NOT NULL,
  matter_id INT NOT NULL,
  grade_value FLOAT NOT NULL CHECK (grade_value BETWEEN 0 AND 10),
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  FOREIGN KEY (user_id) REFERENCES users(user_id) ON UPDATE CASCADE ON DELETE CASCADE,
  FOREIGN KEY (matter_id) REFERENCES matters(matter_id) ON UPDATE CASCADE ON DELETE CASCADE);